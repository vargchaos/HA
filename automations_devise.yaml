- id: log_new_device_telegram
  alias: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π —É Telegram —Ç–∞ –ª–æ–≥
  trigger:
    - platform: event
      event_type: device_registry_updated
      event_data:
        action: create
  variables:
    log_text: >
      [{{ now().strftime('%Y-%m-%d %H:%M:%S') }}] –ù–æ–≤–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π:
      –ù–∞–∑–≤–∞: {{ device_attr(trigger.event.data.device_id, 'name') | default('–Ω–µ–≤—ñ–¥–æ–º–æ') }},
      –í–∏—Ä–æ–±–Ω–∏–∫: {{ device_attr(trigger.event.data.device_id, 'manufacturer') | default('–Ω–µ–≤—ñ–¥–æ–º–æ') }},
      –ú–æ–¥–µ–ª—å: {{ device_attr(trigger.event.data.device_id, 'model') | default('–Ω–µ–≤—ñ–¥–æ–º–æ') }},
      –¢–∏–ø –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: {{
        'Wi-Fi' if device_attr(trigger.event.data.device_id, 'connections') | selectattr('0', 'equalto', 'mac') | list | count > 0
        else 'Bluetooth' if device_attr(trigger.event.data.device_id, 'connections') | selectattr('0', 'equalto', 'bluetooth') | list | count > 0
        else '–Ω–µ–≤—ñ–¥–æ–º–æ'
      }},
      –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä: {{
        device_attr(trigger.event.data.device_id, 'connections')[0][1]
        if device_attr(trigger.event.data.device_id, 'connections') | length > 0 else '–Ω–µ–º–∞—î'
      }}
  action:
    - service: notify.telegram
      data:
        message: >
          üÜï –ù–æ–≤–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π –∑–Ω–∞–π–¥–µ–Ω–æ!
          {{ log_text }}
    - service: notify.discovered_devices_logger
      data:
        message: "{{ log_text }}"